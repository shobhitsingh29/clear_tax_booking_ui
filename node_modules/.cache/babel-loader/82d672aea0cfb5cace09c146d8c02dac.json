{"ast":null,"code":"var _jsxFileName = \"/Users/shobhit.singh/WebstormProjects/modal_razorpay/src/components/DialogRender.jsx\";\nimport React, { useEffect } from \"react\";\n\nfunction DialogRender(props) {\n  var allowedEvents = ['keydown', 'keypress', 'keyup'];\n\n  var handleClose = function handleClose(e) {\n    if (e.keyCode === 27) {\n      props.onRequestClose();\n    }\n  };\n\n  useEffect(function () {\n    allowedEvents.forEach(function (event) {\n      document.addEventListener(event, handleClose);\n    });\n    return function () {\n      document.removeEventListener(handleClose);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }, props.children);\n}\n\nexport default DialogRender;","map":{"version":3,"sources":["/Users/shobhit.singh/WebstormProjects/modal_razorpay/src/components/DialogRender.jsx"],"names":["React","useEffect","DialogRender","props","allowedEvents","handleClose","e","keyCode","onRequestClose","forEach","event","document","addEventListener","removeEventListener","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE3B,MAAMC,aAAa,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,CAAtB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzB,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBJ,MAAAA,KAAK,CAACK,cAAN;AACD;AACF,GAJD;;AAMAP,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,aAAa,CAACK,OAAd,CAAsB,UAACC,KAAD,EAAW;AAC/BC,MAAAA,QAAQ,CAACC,gBAAT,CAA0BF,KAA1B,EAAiCL,WAAjC;AACD,KAFD;AAGA,WAAO,YAAM;AACXM,MAAAA,QAAQ,CAACE,mBAAT,CAA6BR,WAA7B;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASA,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBF,KAAK,CAACW,QAAvB,CAAP;AACD;;AAED,eAAeZ,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nfunction DialogRender(props) {\n\n  const allowedEvents = ['keydown', 'keypress', 'keyup'];\n\n  const handleClose = (e) => {\n    if (e.keyCode === 27) {\n      props.onRequestClose()\n    }\n  };\n\n  useEffect(() => {\n    allowedEvents.forEach((event) => {\n      document.addEventListener(event, handleClose)\n    });\n    return () => {\n      document.removeEventListener(handleClose)\n    }\n  }, []);\n\n  return <React.Fragment>{props.children}</React.Fragment>;\n}\n\nexport default DialogRender;\n"]},"metadata":{},"sourceType":"module"}